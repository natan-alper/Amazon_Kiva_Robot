#BlueJ class context
comment0.target=Kiva
comment0.text=\r\n\ Kiva\ objects\ can\ perform\ actions\ such\ as\ moving\ around\ \r\n\ and\ picking\ and\ dropping\ items.\ \r\n\ A\ Kiva\ object's\ attributes\ include\ it's\ current\ location\ on\ a\ map,\ \r\n\ current\ direction\ it's\ facing,\ the\ map\ layout\ that\ it's\ moving\ on,\ status\ of\r\n\ whether\ it's\ carrying\ a\ pod,\ if\ it\ has\ successfully\ dropped\ a\ pod\ and\ a\r\n\ motor\ life\ time\ that\ indicates\ how\ much\ of\ it's\ motor\ life\ has\ been\ spent.\r\n\ \r\n\ @see\ KivaCommand\r\n\ @author\ Natan\ Alper\ \r\n\ @version\ 4/25/2021\r\n
comment1.params=map
comment1.target=Kiva(FloorMap)
comment1.text=\r\n\ Creates\ a\ Kiva\ robot\ instance\ using\ only\ a\ FloorMap.\r\n\ @param\ map\ FloorMap\ of\ the\ area.\ Includes\ the\ starting\ location\ of\ \r\n\ the\ Kiva\ robot,\ location\ of\ the\ boundaries,\ obstacles,\ pod\ and\ drop-zone.\r\n
comment10.params=
comment10.target=void\ incrementMotorLifetime()
comment10.text=\r\n\ Adds\ 1000\ milliseconds\ to\ the\ motorLifetime\ \r\n\ (indicating\ that\ another\ 1000\ milliseconds\ have\ been\ used).\r\n
comment11.params=
comment11.target=edu.duke.Point\ getCurrentLocation()
comment11.text=\r\n\ Returns\ the\ current\ location\ of\ the\ Kiva\ object.\r\n\ @return\ the\ current\ location\ as\ a\ \r\n\ Point\ (x-y\ coordinate).\ \r\n
comment12.params=
comment12.target=FacingDirection\ getDirectionFacing()
comment12.text=\r\n\ Returns\ the\ direction\ that\ the\ Kiva\ object\ is\ facing\ on\ the\ map\r\n\ (UP,\ DOWN,\ LEFT,\ RIGHT).\r\n\ @return\ current\ direction\ that\ the\ Kiva\ is\ facing\ as\ a\ FacingDirection\ object\r\n
comment13.params=
comment13.target=FloorMap\ getMap()
comment13.text=\r\n\ Returns\ the\ map\ which\ the\ Kiva\ is\ using\ to\ navigate.\r\n\ @return\ map\ that\ shows\ the\ starting\ locations\ of\ the\ Kiva,\ obstacles,\r\n\ boundaries,\ pod,\ and\ drop-zone,\ as\ a\ FloorMap\ object.\r\n
comment14.params=
comment14.target=boolean\ isCarryingPod()
comment14.text=\r\n\ Returns\ true\ if\ Kiva\ is\ carrying\ the\ pod\ and\ false\ if\ not.\r\n
comment15.params=
comment15.target=boolean\ isSuccessfullyDropped()
comment15.text=\r\n\ Returns\ true\ if\ Kiva\ successfully\ dropped\ the\ pod\ and\ false\ if\ not.\r\n
comment16.params=
comment16.target=long\ getMotorLifetime()
comment16.text=\r\n\ Returns\ the\ motorLifetime\ utilized\ by\ the\ Kiva,\ measured\ in\ milliseconds.\r\n
comment2.params=map\ currentLocation
comment2.target=Kiva(FloorMap,\ edu.duke.Point)
comment2.text=\r\n\ Creates\ a\ Kiva\ robot\ instance\ using\ a\ FloorMap\ and\ a\ Point\ to\ set\ \r\n\ the\ starting\ location\ of\ the\ Kiva\ robot.\r\n\ @param\ map\ FloorMap\ of\ the\ area.\ Includes\ the\ locations\ of\ the\ Kiva\ robot,\ \r\n\ boudaries,\ obstacles,\ pod\ and\ drop-zone.\r\n\ @param\ currentLocation\ Starting\ location\ of\ the\ Kiva\ robot.\r\n
comment3.params=command
comment3.target=void\ move(KivaCommand)
comment3.text=\r\n\ Depending\ on\ the\ KivaCommand\ it\ receives,\ move()\ will\ update\ the\ \r\n\ current\ location,\ the\ direction\ the\ robot\ is\ pointing,\ \r\n\ whether\ it\ is\ carrying\ a\ pod\ or\ if\ the\ pod\ has\ been\ successfully\ dropped.\r\n\ @param\ command\ KivaCommand\ that\ indicates\ the\ specific\ movement\ the\ \r\n\ Kiva\ robot\ should\ perform.\r\n\ @see\ \#turnLeft()\r\n\ @see\ \#turnRight()\r\n\ @see\ \#take()\r\n\ @see\ \#drop()\r\n
comment4.params=
comment4.target=void\ moveForward()
comment5.params=newLoc\ mapObj
comment5.target=void\ handleExceptions(edu.duke.Point,\ FloorMapObject)
comment6.params=
comment6.target=void\ turnLeft()
comment6.text=\r\n\ Kiva\ object's\ direction\ will\ rotate\ to\ the\ left.\ \r\n\ Does\ NOT\ change\ the\ location\ that\ the\ Kiva\ object\ is\ currently\ at.\ \r\n
comment7.params=
comment7.target=void\ turnRight()
comment7.text=\r\n\ Kiva\ object's\ direction\ will\ rotate\ to\ the\ right.\ \r\n\ Does\ NOT\ change\ the\ location\ that\ the\ Kiva\ object\ is\ currently\ at.\ \r\n
comment8.params=
comment8.target=void\ take()
comment8.text=\r\n\ Kiva\ object\ will\ take/pick\ up\ pod.\ \r\n\ This\ will\ throw\ a\ NoPodException\ if\ it\ is\ already\ holding\ a\ pod\ \r\n\ or,\ if\ there\ is\ no\ pod\ at\ the\ current\ location.\r\n
comment9.params=
comment9.target=void\ drop()
comment9.text=\r\n\ Kiva\ object\ will\ drop\ pod.\ \r\n\ This\ will\ throw\ a\ IllegalMoveException\ if\ it\ is\ not\ holding\ a\ pod\ at\ the\ \r\n\ time\ of\ the\ drop\ or,\ an\ IllegalDropZoneException\ if\ it\ is\ not\ \r\n\ at\ a\ drop-zone\ location.\r\n
numComments=17
